spring:
  application:
    name: identify
  threads:
    virtual:
      enabled: true
  security:
    oauth2:
      authorizationserver:
        client:
          default-client:
            registration:
              client-id: ${DEFAULT_OAUTH2_CLIENT_ID}
              client-authentication-methods:
                - "none"
              authorization-grant-types:
                - "authorization_code"
              redirect-uris:
                - ${DEFAULT_OAUTH2_REDIRECT_URI}
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: false
            require-proof-key: true
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
          github-idp:
            provider: github
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: user:email, read:user
            client-name: Sign in with GitHub
        provider:
          google:
            user-name-attribute: email
          github:
            user-name-attribute: login
  datasource:
    url: ${IDENTIFY_DATASOURCE_URL}
    username: ${IDENTIFY_DATASOURCE_USERNAME}
    password: ${IDENTIFY_DATASOURCE_PASSWORD}
  jpa:
    open-in-view: false
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
server:
  port: ${AUTHORIZATION_SERVER_PORT}

